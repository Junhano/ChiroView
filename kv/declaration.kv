<-MyButton@Button>:
	color: 0,0,0,1
	font_name: 'Font/NotoSansSC-Regular.otf'
	state_image: self.background_normal if self.state == 'normal' else self.background_down
	disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down
	_scale: 1. if self.texture_size[0] < self.width else float(self.width) / self.texture_size[0]
	canvas:
		Color:
			rgba: self.background_color
		BorderImage:
			border:self.border
			pos: self.pos
			size: self.size
			source: self.disabled_image if self.disabled else self.state_image
		PushMatrix
		Scale:
			origin: self.center
			x: self._scale or 1.
			y: self._scale or 1.
		Color:
			rgba: self.disabled_color if self.disabled else self.color
		Rectangle:
			texture: self.texture
			size: self.texture_size
			pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)
		PopMatrix





<RotationImage@Image>:
	angle: 0
	canvas.before:
		PushMatrix
		Rotate:
			angle: root.angle
			axis: 0, 0, 1
			origin: root.center
	canvas.after:
		PopMatrix




<MDFlatButton>:
	font_name: 'Font/NotoSansSC-Regular.otf'

<NumberInputNew@TextInput>:
	input_type: 'number'
	input_filter: 'int'
	font_name: 'Font/NotoSansSC-Regular.otf'	

<LineContent>	
	orientation: 'vertical'
	spacing: '12dp'
	height: '120dp'
	font_name: 'Font/NotoSansSC-Regular.otf'
	NumberInputNew:
		hint_text: languageDict1.langDict["VerticalLine"][app.state]
	NumberInputNew:
		hint_text: languageDict1.langDict["HorizontalLine"][app.state]

<RotationValue>:

	MDSlider:
		id: ROValue
		min: 1
		max: 359
		value: app.rotateDegree



<Helper>:
	orientation: 'horizontal'
	spacing: '12dp'
	ImageButton:
		source: "icons/icons8-slr-camera-64.png"
		on_release:
			app.StartExamDialog.dismiss()
			app.StartExamDialog: None
			app.capture()
	ImageButton: 
		source: "icons/icons8-photo-gallery-100.png"
		on_release:
			app.StartExamDialog.dismiss()
			app.StartExamDialog: None
			app.open_photos()
	MyButton:
		background_color: 0,0,0,0
		text: languageDict1.langDict["CANCEL"][app.state]
		color: 0,0,0,1
		on_release:
			app.StartExamDialog.dismiss()
			app.StartExamDialog:None

<ItemConfirm>:
	on_release: root.set_icon(check)
	
	CheckboxRightWidget:
		id: check
		group: "check"

	