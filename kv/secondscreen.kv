#:import utils kivy.utils
#:import languageDict1 languageDict.LanguageDict
#:import MDFloatLayout kivymd.uix.floatlayout.MDFloatLayout





<SecondScreen>:
	image_change: modifyimage
	canvas.before:
		Rectangle:
			pos: self.pos
			size: self.size
			source: 'icons/BackGround.jpeg'
	MDFloatLayout:		


		MDRectangleFlatIconButton:
			md_bg_color: 0,0,0,0
			text_color: 0,0,0,1
			icon: "keyboard-return"
			font_name: 'Font/NotoSansSC-Regular.otf'
			text: languageDict1.langDict["HOME"][app.state]
			pos_hint: {"top": 1, "x": 0.05}
			size_hint: 0.15, 0.1
			on_release:
				app.confirm_setting(app.changeBackScreenWithSave, "SavePictureConfirm", app.changeBackScreenWithOutSave, "UNSAVE", "SAVE")
		
		MyButton:
			background_color: 0,0,0,0
			text: languageDict1.langDict["Rotate"][app.state]
			pos_hint: {"top": 1, "x": 0.4}
			size_hint: 0.15, 0.1
			on_release:
				root.image_change.angle -= app.rotateDegree

		MyButton:
			background_color: 0,0,0,0
			text: languageDict1.langDict["Evaluate"][app.state]
			pos_hint: {"top": 1, "x": 0.75}
			size_hint: 0.15, 0.1
			on_release:
				print('Analyze')
		
		MDFloatLayout:
			pos_hint: {"top": 0.9}
			size_hint: 1, 0.8
			canvas.before:
				Color:
					rgba: 1,1,1,1
				Line:
					width: 1
					rectangle: self.x, self.y, self.width, self.height 
			
			MDLabel:
				pos_hint: {"top": 1}
				halign: "center"
				size_hint: 1, 0.1
				font_name: 'Font/NotoSansSC-Regular.otf'
				text: languageDict1.langDict["HintForSavingCoordinate"][app.state]

			RotationImage:				
				source:app.image_source
				angle: 0
				pos_hint: {"top": 0.9, "x": 0.1}
				size_hint: 0.8, 0.8
				id: modifyimage
				on_touch_down: 
					app.imagePosCallBack(args) 
				canvas.before:
					Color:
						rgba: 0,0,0,1
					Line:
						width: 1
						rectangle: self.x, self.y, self.width, self.height 

		MyButton:
			background_color: 0,0,0,0
			text: languageDict1.langDict["IdentifyPart"][app.state]
			pos_hint: {"top": 0.1, "x": 0.05}
			size_hint: 0.15, 0.1
			on_release:
				app.IdentifyBodyPartDialog()

		MyButton:
			background_color: 0,0,0,0
			text: languageDict1.langDict["FrontView"][app.state] if app.View == 0 else languageDict1.langDict["SideView"][app.state]
			pos_hint: {"top": 0.1, "x": 0.4}
			size_hint: 0.15, 0.1
			on_release:
				app.switchView()

		MyButton:
			background_color: 0,0,0,0
			text: languageDict1.langDict["DeletePart"][app.state]
			pos_hint: {"top": 0.1, "x": 0.75}
			size_hint: 0.15, 0.1
			on_release:
				app.delete_Body_Part_Dialog()
		


			

		
		

		
		

